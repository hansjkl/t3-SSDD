{
    "VALIDATION": "forward",
    "SERVERS": [
        "R1",
        "R2",
        "R3"
    ],
    // Información inicial de la base de datos
    "DATA": {
        "X": "Fibonacci"
    },
    "TRANSACTIONS": [
        "T1;BEGIN",
        "T1;WRITE;X,1123581321",
        // Consulta 1 - Ver valores posibles de X (Fibonacci o 1123581321)
        "C;READ_POSSIBLE_VALUES;X",
        // R1 y R2 aceptan T1
        "T1;CAN_COMMIT;R1",
        "T1;CAN_COMMIT;R2",

        // Empieza T2
        "T2;BEGIN",
        "T2;READ;X",

        // R1 y R2 rechazan T2 porque quiere leer X que ya está reservado
        "T2;CAN_COMMIT;R1",
        "T2;CAN_COMMIT;R2",
        // T1 hace commit y modifica finalmente X en la base de datos
        "T1;COMMIT",

        // R1 y R2 ahora si aceptan T2 por la validación forward
        "T2;CAN_COMMIT;R1",
        "T2;CAN_COMMIT;R2",
        // T2 intenta hacer commit,
        "T2;COMMIT",
        // Aquí se hace una última validación backward y se ve que T2 leyó X
        // pero T1 ya hizo commit donde modificó X. Así que T2 la abortan.
        "T2;WRITE;X,HOLIWIS" // No tiene efecto porque T2 ya finalizó
    ]
}